<Window x:Class="DeltaSalaire.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeltaSalaire"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        
        mc:Ignorable="d"
        Title="DeltaSalaire" Name="MainF" Height="655.081" Width="1272.924" Loaded="Window_Loaded" Initialized="Window_Initialized" WindowStyle="ThreeDBorderWindow" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="mainicon.ico">


    <Window.Resources>

        <local:DatePickerToShort x:Key="DatePickerToShort1"/>
        <sys:Int32 x:Key="imoispaye">0</sys:Int32>

        <sys:Boolean x:Key="bGrilleValide">false</sys:Boolean>
        <sys:Boolean x:Key="bBaseCalc">false</sys:Boolean>
        <sys:Boolean x:Key="_bBaseCalc">false</sys:Boolean>
        <sys:Boolean x:Key="_bGrilleValide">false</sys:Boolean>
        <sys:Boolean x:Key="bInsEdit">false</sys:Boolean>
        <sys:Boolean x:Key="bContEdit">false</sys:Boolean>
        <sys:Boolean x:Key="_bContEdit">true</sys:Boolean>
        <sys:Boolean x:Key="bEntEdit">false</sys:Boolean>
        <sys:Boolean x:Key="_bEntEdit">true</sys:Boolean>
        <sys:Boolean x:Key="bSalEdit">false</sys:Boolean>
        <sys:Boolean x:Key="_bSalEdit">true</sys:Boolean>
        <sys:Boolean x:Key="bTauxEdit">false</sys:Boolean>
        <sys:Boolean x:Key="_bTauxEdit">true</sys:Boolean>
        <sys:Boolean x:Key="bMoisValide">false</sys:Boolean>
        <sys:Boolean x:Key="bMoisPaye">false</sys:Boolean>
        <local:ItemsContenuConverter x:Key="ItemsContenuConverter" />
        <local:CheckMoispaye x:Key="CheckMoispaye" />
        <local:PremierPaiementAenvoyer x:Key="PremierPaiementAenvoyer" />
        <local:ItemscountToBooleanConverter x:Key="ItemscountToBooleanConverter" />
        <local:ValueToBooleanConverter x:Key="ValueToBooleanConverter" />
        <local:CurrentItemToBooleanConverter x:Key="CurrentItemToBooleanConverter" />
        <local:CurrentItemContratToBooleanConverter x:Key="CurrentItemContratToBooleanConverter" />
        <local:CurrentTabToBooleanConverter x:Key="CurrentTabToBooleanConverter" />
        <local:PlusMoinsToBooleanConverter x:Key="PlusMoinsToBooleanConverter" />
        <local:IsCheckedToSelectionModeConverter x:Key="IsCheckedToSelectionModeConverter" />
        <local:CurItemPaiementComptabiliseConverter x:Key="CurItemPaiementComptabiliseConverter" />
        <local:DatePickerToShort x:Key="DatePickerToShort" />

        <x:Array x:Key="shorairetravail" Type="{x:Type sys:String}">
            <sys:String>Temps Plein</sys:String>
            <sys:String>Temps Partiel</sys:String>
        </x:Array>
        <x:Array x:Key="sexe" Type="{x:Type sys:String}">
            <sys:String >Masculin</sys:String>
            <sys:String >Féminin</sys:String>
        </x:Array>
        <x:Array x:Key="ssexeAbr" Type="{x:Type sys:String}">
            <sys:String>M/F</sys:String>
            <sys:String>M</sys:String>
            <sys:String>F</sys:String>
        </x:Array>
        <x:Array x:Key="soccupation" Type="{x:Type sys:String}">
            <sys:String>Employé fixe</sys:String>
            <sys:String>Saisonnier</sys:String>
        </x:Array>
        <x:Array x:Key="sgenreavs" Type="{x:Type sys:String}">
            <sys:String>AVS-AI-APG non soumis (18 ans)</sys:String>
            <sys:String>AVS-AI-APG soumis</sys:String>
        </x:Array>
        <x:Array x:Key="sgenreac" Type="{x:Type sys:String}">
            <sys:String>Ass. Chômage 1</sys:String>
            <sys:String>Ass. Chômage 2</sys:String>
        </x:Array>
        <x:Array x:Key="sgenrelaa" Type="{x:Type sys:String}">
            <sys:String>Femme</sys:String>
            <sys:String>Homme</sys:String>
        </x:Array>
        <x:Array x:Key="scaissemaladie" Type="{x:Type sys:String}">
            <sys:String>Caisse maladie 1</sys:String>
            <sys:String>Caisse maladie 2</sys:String>
            <sys:String>Caisse maladie 3</sys:String>
        </x:Array>
        <x:Array x:Key="sgenrelpp" Type="{x:Type sys:String}">
            <sys:String>Plan 1</sys:String>
            <sys:String>Plan 2</sys:String>
            <sys:String>Plan 3</sys:String>
        </x:Array>
        <x:Array x:Key="setatcivil" Type="{x:Type sys:String}">
            <sys:String>Célibataire</sys:String>
            <sys:String>Marié(e)</sys:String>
            <sys:String>Divorcé(e)</sys:String>
        </x:Array>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <StackPanel>
                            <TextBlock Text="{Binding typeparam}" Width="200"/>
                            <ItemsPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect Color="BurlyWood"/>
    </Window.Effect>




    <Grid x:Name="g_sel" Height="623" VerticalAlignment="Top">
        <TabControl x:Name="tb_tableau" TabStripPlacement="Bottom" HorizontalAlignment="Left" Height="550" Margin="10,54,0,0" VerticalAlignment="Top" Width="1236" Style="{DynamicResource MainTabControl}">
            <TabItem Header="ENTREPRISES" Margin="5,0" Padding="0,2" Uid="0">

                <Grid x:Name="gv_entreprise" Background="#FFE5CAA1" Height="auto" Margin="0,0,0,0">
                    <ComboBox x:Name="cmb_Entreprise" IsEnabled="{DynamicResource _bEntEdit}" TextSearch.TextPath="societe" ItemsSource="{Binding}" SelectedValue="{Binding identreprise, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="identreprise"  HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="470" SelectionChanged="cmb_Entreprise_SelectionChanged" SourceUpdated="cmb_Entreprise_SourceUpdated">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="5,2,0,0" Text="{Binding societe}"/>
                                    <TextBlock Margin="5,2,0,0" Text="{Binding npa}"/>
                                    <TextBlock Margin="5,2,0,0" Text="{Binding ville}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Width="100" Margin="5,2,0,0" Grid.Column="0" Text="{Binding societe}"/>
                                                <TextBlock Width="50" Margin="5,2,0,0" TextAlignment="Left" Grid.Column="1" Text="{Binding npa}"/>
                                                <TextBlock Width="100" Margin="5,2,0,0" TextAlignment="Left" Grid.Column="2" Text="{Binding ville}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                </Trigger>

                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>

                    </ComboBox>
                    <TabControl x:Name="tabControl2" HorizontalAlignment="Left" Height="473" Margin="10,55,0,0" VerticalAlignment="Top" Width="1046" BorderBrush="LightSkyBlue" BorderThickness="2">
                        <TabItem Header="Info. générales" Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5">
                                <Grid x:Name="p_ent_adresse" Background="#FFE5E5E5" Margin="10,10,70,54"  IsEnabled="{DynamicResource bEntEdit}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Label x:Name="label1" Content="langue" HorizontalAlignment="Left" Margin="44,10,0,0" VerticalAlignment="Top"/>
                                    <Label x:Name="label_Copy28" Content="société" HorizontalAlignment="Left" Margin="43,38,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_societe" Text="{Binding societe, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="95,41,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" TextChanged="ed_nom_TextChanged"/>
                                    <ComboBox x:Name="cmb_Ent_langue" SelectedValue="{Binding idlanguage, Mode=TwoWay, UpdateSourceTrigger=Explicit}" ItemsSource="{Binding}" SelectedValuePath="IdLanguage" TextSearch.TextPath="LanguageNom" HorizontalAlignment="Left" Margin="95,14,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Margin="0" Text="{Binding LanguageNom}" TextSearch.TextPath="LanguageNom"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdLanguage}"/>
                                                                <TextBlock Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding LanguageNom}"/>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding Abre}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>
                                    <TextBox x:Name="ed_Ent_co" HorizontalAlignment="Left" Height="23" Margin="95,69,0,0" TextWrapping="Wrap" Text="{Binding co, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy31" Content="c/o" HorizontalAlignment="Left" Margin="63,66,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_adresse1" HorizontalAlignment="Left" Height="23" Margin="95,97,0,0" TextWrapping="Wrap" Text="{Binding adresse1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy32" Content="adresse" HorizontalAlignment="Left" Margin="40,94,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_adresse2" HorizontalAlignment="Left" Height="23" Margin="95,125,0,0" TextWrapping="Wrap" Text="{Binding adresse2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy33" Content="adresse 2" HorizontalAlignment="Left" Margin="30,122,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_Ent_npaville" TextSearch.TextPath="CityName" ItemsSource="{Binding}" SelectedValue="{Binding idville, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="IdVille" HorizontalAlignment="Left" Margin="227,153,0,0" VerticalAlignment="Top" Width="213" SelectionChanged="cmb_npaville_SelectionChanged" Style="{DynamicResource RoundComboBox}" Height="22" TargetUpdated="cmb_Ent_npaville_TargetUpdated" IsEditable="True" IsReadOnly="True">
                                        <!-- SelectedValue="{Binding idville, Mode=TwoWay, UpdateSourceTrigger=Explicit}" -->
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="2" Text="{Binding Zip}"/>
                                                    <TextBlock Margin="2" Text="{Binding CityName}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdVille}"/>
                                                                <TextBlock Width="50" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding Zip}"/>
                                                                <TextBlock Width="200" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding CityName}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>
                                    <TextBox x:Name="ed_Ent_npacity" HorizontalAlignment="Left" Height="23" Margin="95,152,0,0" TextWrapping="Wrap" Text="{Binding npa, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_Ent_npacity_TextChanged"/>
                                    <Label x:Name="label_Copy34" Content="npa ville" HorizontalAlignment="Left" Margin="36,148,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_tel1" HorizontalAlignment="Left" Height="23" Margin="95,180,0,0" TextWrapping="Wrap" Text="{Binding tel1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy35" Content="tél. 1" HorizontalAlignment="Left" Margin="54,177,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_tel2" HorizontalAlignment="Left" Height="23" Margin="320,180,0,0" TextWrapping="Wrap" Text="{Binding tel2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy36" Content="tél. 2" HorizontalAlignment="Left" Margin="277,177,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_mobile" HorizontalAlignment="Left" Height="23" Margin="95,208,0,0" TextWrapping="Wrap" Text="{Binding mobile, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy37" Content="mobile" HorizontalAlignment="Left" Margin="43,205,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_fax" HorizontalAlignment="Left" Height="23" Margin="320,208,0,0" TextWrapping="Wrap" Text="{Binding fax, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy38" Content="fax" HorizontalAlignment="Left" Margin="286,205,0,0" VerticalAlignment="Top" Width="27"/>
                                    <TextBox x:Name="ed_Ent_email1" HorizontalAlignment="Left" Height="23" Margin="95,236,0,0" TextWrapping="Wrap" Text="{Binding email1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy39" Content="email 1" HorizontalAlignment="Left" Margin="42,233,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_email2" HorizontalAlignment="Left" Height="23" Margin="320,236,0,0" TextWrapping="Wrap" Text="{Binding email2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy40" Content="email 2" HorizontalAlignment="Left" Margin="265,233,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_iban" HorizontalAlignment="Left" Height="23" Margin="587,14,0,0" TextWrapping="Wrap" Text="{Binding iban, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy71" Content="IBAN" HorizontalAlignment="Left" Margin="545,11,0,0" VerticalAlignment="Top"/>
                                    <Label x:Name="label_Copy79" Content="banque" HorizontalAlignment="Left" Margin="532,37,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_banque" HorizontalAlignment="Left" Height="23" Margin="587,41,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="88" Style="{DynamicResource styledetexte}" ToolTip="Recherche noSIC, noCB, SWIFT, NOM" TextChanged="ed_Ent_banque_TextChanged"/>
                                    <TextBox x:Name="ed_Ent_banque1" HorizontalAlignment="Left" Height="23" Margin="112,406,0,0" Visibility="Hidden" TextWrapping="Wrap" Text="{Binding idbanque}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_Ent_banque1_TextChanged"/>
                                    <ComboBox x:Name="cmb_Ent_banque" TextSearch.TextPath="nombanque" ItemsSource="{Binding}" SelectedValue="{Binding idbanque, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idbanque" HorizontalAlignment="Left" Margin="680,42,0,0" VerticalAlignment="Top" Width="252" Style="{DynamicResource RoundComboBox}" Height="22" IsReadOnly="True" SelectionChanged="cmb_Ent_banque_SelectionChanged" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="2" Text="{Binding nocb}"/>
                                                    <TextBlock Margin="2" Text="-"/>
                                                    <TextBlock Margin="2" Text="{Binding swift}"/>
                                                    <TextBlock Margin="2" Text="-"/>
                                                    <TextBlock Margin="2" Text="{Binding nombanque}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Width="50" Grid.Column="0" Text="{Binding nosic}"/>
                                                                <TextBlock Width="80" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="1" Text="{Binding swift}"/>
                                                                <TextBlock Width="50" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="2" Text="{Binding nomabrege}"/>
                                                                <TextBlock Width="120" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="3" Text="{Binding nombanque}"/>
                                                                <TextBlock Width="120" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="4" Text="{Binding adresse}"/>
                                                                <TextBlock Width="100" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="5" Text="{Binding casepostale}"/>
                                                                <TextBlock Width="50" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="6" Text="{Binding npa}"/>
                                                                <TextBlock Width="100" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="7" Text="{Binding ville}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="Opacity" Value="0.25"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>
                                    <TextBox x:Name="ed_Ent_basecompta" HorizontalAlignment="Left" Height="23" Margin="587,69,0,0" TextWrapping="Wrap" Text="{Binding basecompta, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy82" Content="base compta" HorizontalAlignment="Left" Margin="504,66,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_comptecharge" HorizontalAlignment="Left" Height="23" Margin="812,69,0,0" TextWrapping="Wrap" Text="{Binding comptecharge, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy822" Content="compte charges" HorizontalAlignment="Left" Margin="713,66,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_comptecredit" HorizontalAlignment="Left" Height="23" Margin="587,97,0,0" TextWrapping="Wrap" Text="{Binding comptedebit, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy80" Content="compte débit" HorizontalAlignment="Left" Margin="498,94,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_Ent_comptedebit" HorizontalAlignment="Left" Height="23" Margin="812,97,0,0" TextWrapping="Wrap" Text="{Binding comptecredit, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy81" Content="compte crédit" HorizontalAlignment="Left" Margin="724,94,0,0" VerticalAlignment="Top"/>

                                </Grid>
                                <Button x:Name="bt_ent_ajout" Content="Ajout" HorizontalAlignment="Left" Margin="29,393,0,17" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="ajout" Click="bt_ent_ajout_Click"/>
                                <Button x:Name="bt_ent_modifier" Content="Modifier" HorizontalAlignment="Left" Margin="124,393,0,17" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="modif" IsEnabled="{DynamicResource _bEntEdit}" Click="bt_ent_modifier_Click"/>
                                <Button x:Name="bt_ent_valider" Content="Valider" HorizontalAlignment="Left" Margin="315,393,0,17" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Uid="valid" Height="32" IsEnabled="{DynamicResource bEntEdit}" Click="bt_ent_valider_Click"/>
                                <Button x:Name="bt_ent_annuler" Content="Annuler" HorizontalAlignment="Left" Margin="409,393,0,17" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Uid="annul" Height="32" IsEnabled="{DynamicResource bEntEdit}" Click="bt_ent_annuler_Click"/>
                                <Button x:Name="bt_ent_suppr" Content="Supprimer" HorizontalAlignment="Left" Margin="219,393,0,17" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="suppr" IsEnabled="{DynamicResource _bEntEdit}" Click="bt_ent_suppr_Click"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Taux Institutions Sociales" Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5">
                                <Grid x:Name="p_tauxentreprise" HorizontalAlignment="Left" Height="368" Margin="22,22,0,0" VerticalAlignment="Top" Width="1006">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="41*"/>
                                        <ColumnDefinition Width="44*"/>
                                        <ColumnDefinition Width="101*"/>
                                        <ColumnDefinition Width="189*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="146*"/>
                                        <ColumnDefinition Width="120*"/>
                                        <ColumnDefinition Width="74*"/>
                                        <ColumnDefinition Width="70*"/>
                                        <ColumnDefinition Width="101*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="label1_Copy" Content="pour l'année" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="76" Grid.ColumnSpan="2"/>
                                    <DataGrid x:Name="gv_tauxentreprise" IsReadOnly="True" AutoGenerateColumns="False" Height="284" Margin="-4,32,14,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" SelectionChanged="gv_tauxentreprise_SelectionChanged" Grid.ColumnSpan="10" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" >

                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Width="40" Header="rang" Binding="{Binding rang}"/>
                                            <DataGridTextColumn Width="45" Header="type" Binding="{Binding typeparam}"/>
                                            <DataGridTextColumn Width="100" Header="Inst. Soc." Binding="{Binding instnom}"/>
                                            <DataGridTextColumn Width="190" Header="code" Binding="{Binding txtparam}"/>
                                            <DataGridTextColumn Width="120" Header="base calcul Charge" Binding="{Binding formulebase}"/>
                                            <DataGridTextColumn Width="150" Header="critère" Binding="{Binding conditioncalc}"/>
                                            <DataGridTextColumn Width="120" Header="compte compta" CellStyle="{StaticResource colonnedroite}" Binding="{Binding comptecompta}"/>
                                            <DataGridCheckBoxColumn Width="70" Header="déduc°" Binding="{Binding deduction, Converter={StaticResource PlusMoinsToBooleanConverter}}">

                                            </DataGridCheckBoxColumn>
                                            <DataGridTextColumn Width="70" Header="part employeur" CellStyle="{StaticResource colonnedroite}" Binding="{Binding tauxemployeur}"/>
                                            <DataGridTextColumn Width="70" Header="part employé" CellStyle="{StaticResource colonnedroite}" Binding="{Binding tauxemploye}"/>

                                        </DataGrid.Columns>

                                    </DataGrid>
                                    <Label x:Name="label_Copy57s" Content="rang" HorizontalAlignment="Left" Margin="8,316,0,0" VerticalAlignment="Top" Height="26" Width="33"/>
                                    <TextBox x:Name="ed_tx_rang" Text="{Binding rang, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="5,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="36" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" />
                                    <Label x:Name="label_Copy57" Content="type" HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Height="26" Width="33" Grid.Column="1"/>
                                    <TextBox x:Name="ed_tx_type" Text="{Binding typeparam, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="5,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="41" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Grid.Column="1" Grid.ColumnSpan="2"/>
                                    <Label x:Name="label_Copy61" Content="inst. soc." HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Grid.Column="2" Height="26" Width="65"/>
                                    <ComboBox x:Name="cmb_tx_inst"  IsEnabled="{DynamicResource bTauxEdit}" ItemsSource="{Binding}" TextSearch.TextPath="societe" SelectedValue="{Binding idinstitution, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idinstitution" HorizontalAlignment="Left" Margin="5,342,0,0" VerticalAlignment="Top" Width="94" Style="{DynamicResource RoundComboBox}" Height="23" Grid.Column="2" Background="#FFD3E4F2">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="1" Text="{Binding societe}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black" Width="500">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Width="120"  Grid.Column="0" Text="{Binding societe}"/>
                                                                <TextBlock Width="80" Grid.Column="1" Text="{Binding norefpolice}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>

                                    <Label x:Name="label_Copy64" Content="code" HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Grid.Column="3" Height="26" Width="36"/>
                                    <TextBox x:Name="ed_tx_code_Copy" Text="{Binding txtparam, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="5,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="185" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Grid.Column="3" Grid.ColumnSpan="2"/>
                                    <Label x:Name="label_Copy62" Content="base calcul" HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Grid.Column="4" Height="26" Width="68"/>
                                    <TextBox x:Name="ed_tx_basecalc" Text="{Binding formulebase, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="5,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="116" Style="{DynamicResource styledetexte}" Grid.Column="4" Grid.ColumnSpan="2"/>
                                    <Label x:Name="label_Copy58" Content="critère" HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Grid.Column="5" Height="26" Width="43"/>
                                    <TextBox x:Name="ed_tx_critere" Text="{Binding conditioncalc, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="5,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="141" Style="{DynamicResource styledetexte}" Grid.Column="5" />
                                    <TextBox x:Name="ed_tx_deduction" Text="{Binding deduction, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Visibility="Hidden" HorizontalAlignment="Left" Height="23" Margin="5,373,0,-28" TextWrapping="Wrap" VerticalAlignment="Top" Width="141" Style="{DynamicResource styledetexte}" Grid.Column="5" TextChanged="ed_tx_deduction_TextChanged" />
                                    <Label x:Name="label_Copy63" Content="compte compta" HorizontalAlignment="Left" Margin="5,316,0,0" VerticalAlignment="Top" Grid.Column="6" Height="26" Width="105"/>
                                    <TextBox x:Name="ed_tx_libelleetat" Text="{Binding comptecompta, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="3,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="115" Style="{DynamicResource styledetexte}" Grid.Column="6" Uid="num"/>
                                    <CheckBox x:Name="ck_tx_deduction" Content="" Grid.Column="7" HorizontalAlignment="Left" Margin="10,346,0,0" VerticalAlignment="Top"  IsEnabled="{DynamicResource bTauxEdit}" Click="ck_tx_deduction_Click" />
                                    <Label x:Name="label_Copy59" Content="employeur" HorizontalAlignment="Left" Margin="0,316,0,0" VerticalAlignment="Top" Grid.Column="8" Height="26" Width="67"/>
                                    <TextBox x:Name="ed_taux_employeur" Text="{Binding tauxemployeur, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="0,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num" Grid.Column="8"/>
                                    <Label x:Name="label_Copy60" Content="employé" HorizontalAlignment="Left" Margin="0,316,0,0" VerticalAlignment="Top" Grid.Column="9" Height="26" Width="56"/>
                                    <TextBox x:Name="ed_taux_employe" Text="{Binding tauxemploye, Mode=TwoWay, UpdateSourceTrigger=Explicit}" IsEnabled="{DynamicResource bTauxEdit}" HorizontalAlignment="Left" Height="23" Margin="0,342,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num" Grid.Column="9"/>
                                    <TextBox x:Name="ed_tx_annee" Text="{Binding annee, Mode=OneWay}" HorizontalAlignment="Left" Height="23" Margin="0,4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="69" Style="{DynamicResource styledetexte}" TextChanged="ed_tx_annee_TextChanged" Grid.Column="2"/>
                                    <Label x:Name="label_Copy72" Content="déduction" HorizontalAlignment="Left" Margin="4,316,0,0" VerticalAlignment="Top" Grid.Column="7" Height="26" Width="65"/>
                                </Grid>
                                <Button x:Name="bt_taux_ajout" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource _bEntEdit}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="22,395,0,0" Click="bt_taux_ajout_Click"/>
                                <Button x:Name="bt_taux_modif" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="modif" Height="30" Margin="57,395,0,0" Click="bt_taux_modif_Click"  IsEnabled="{DynamicResource _bTauxEdit}"/>
                                <Button x:Name="bt_taux_valid" Content="-" HorizontalAlignment="Left" Margin="147,395,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bTauxEdit}" Background="#FFBACCEC" Uid="valid" Height="30" Click="bt_taux_valid_Click" />
                                <Button x:Name="bt_taux_annul" Content="-" HorizontalAlignment="Left" Margin="182,395,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bTauxEdit}" Background="#FFBACCEC" Uid="annul" Height="30" Click="bt_taux_annul_Click" />
                                <!--<Button x:Name="bt_taux_modif" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="modif" Height="30" Margin="45,353,0,0" Click="bt_taux_modif_Click"  IsEnabled="{DynamicResource _bTauxEdit}"/-->
                                <Button x:Name="bt_taux_suppr" Content="-" HorizontalAlignment="Left" Margin="92,395,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" IsEnabled="{DynamicResource _bTauxEdit}" Click="bt_taux_suppr_Click"/>
                                <CheckBox x:Name="checkBox" Content="CheckBox" HorizontalAlignment="Left" Margin="191,30,0,0" VerticalAlignment="Top"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="  Gestion Départements et Fonctions  " Style="{DynamicResource TabItemStyle1}" Margin="-3,0,3,0">
                            <Grid Background="#FFE5E5E5">
                                <TextBox x:Name="ed_param_departement" Text="{Binding DepartementNom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="25" Margin="28,39,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="186" Style="{DynamicResource styledetexte}" KeyUp="ed_param_departement_KeyUp" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=ed_param_departement}"/>
                                <TextBox x:Name="ed_param_fonction" Text="{Binding FonctionNom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="25" Margin="237,39,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="186" Style="{DynamicResource styledetexte}" KeyUp="ed_param_fonction_KeyUp" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=ed_param_fonction}"/>
                                <ListBox x:Name="l_departement" HorizontalAlignment="Left" Height="195" Margin="28,72,0,0" VerticalAlignment="Top" Width="186" Style="{DynamicResource styledeliste}" SelectionChanged="l_departement_SelectionChanged" Background="#FFD3E4F2">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DepartementNom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Width="auto"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>
                                <ListBox x:Name="l_fonction" HorizontalAlignment="Left" Height="195" Margin="237,72,0,0" VerticalAlignment="Top" Width="186" Style="{DynamicResource styledeliste}" SelectionChanged="l_fonction_SelectionChanged" Background="#FFD3E4F2">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding FonctionNom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Width="auto"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Label x:Name="label3" Content="départements" HorizontalAlignment="Left" Margin="23,12,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label3_Copy" Content="fonctions" HorizontalAlignment="Left" Margin="231,13,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="bt_depa_ajout" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="32,272,0,0" Click="bt_depa_ajout_Click"/>
                                <Button x:Name="bt_depa_suppr" Content="-" HorizontalAlignment="Left" Margin="67,272,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" Click="bt_depa_suppr_Click" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=ed_param_departement}"/>
                                <Button x:Name="bt_fonc_ajout" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="237,272,0,0" Click="bt_fonc_ajout_Click" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=ed_param_departement}"/>
                                <Button x:Name="bt_fonc_suppr" Content="-" HorizontalAlignment="Left" Margin="272,272,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" Click="bt_fonc_suppr_Click" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=ed_param_fonction}"/>
                            </Grid>
                        </TabItem>


                    </TabControl>
                    <Label x:Name="label_Copy54" Content="institution sociale" HorizontalAlignment="Left" Margin="503,435,0,0" VerticalAlignment="Top" Visibility="Hidden"/>
                    <ComboBox x:Name="cmb_institution" TextSearch.TextPath="societe" ItemsSource="{Binding}" SelectedValue="{Binding idrefinstitution, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idinstitution"  HorizontalAlignment="Left" Height="26" Margin="503,461,0,0" VerticalAlignment="Top" Width="530" Style="{DynamicResource RoundComboBox}" Visibility="Hidden">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="5,1,0,0" Text="{Binding norefpolice}"/>
                                    <TextBlock Margin="1" Text="{Binding societe}"/>
                                    <TextBlock Margin="1" Text="{Binding npa}"/>
                                    <TextBlock Margin="1" Text="{Binding ville}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid x:Name="gd" TextElement.Foreground="Black" Width="500">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Width="120" Grid.Column="0" Text="{Binding norefpolice}"/>
                                                <TextBlock Width="auto"  Grid.Column="1" Text="{Binding societe}"/>
                                                <TextBlock Width="80" TextAlignment="Left" Grid.Column="2" Text="{Binding npa}"/>
                                                <TextBlock Width="150" TextAlignment="Left" Grid.Column="3" Text="{Binding ville}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                </Trigger>

                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ComboBox.ItemContainerStyle>

                    </ComboBox>
                </Grid>
            </TabItem>
            <TabItem Header="EMPLOYES" Margin="5,0" Padding="0,2" Uid="1">
                <Grid x:Name="g_selsalarie" Background="#FFE4C69A" Height="auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="dataGrid" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="518" Margin="10,10,0,0" VerticalAlignment="Top" Width="368" SelectionChanged="dataGrid_SelectionChanged" DataContextChanged="dataGrid_DataContextChanged" CurrentCellChanged="dataGrid_CurrentCellChanged">
                        <DataGrid.Columns>
                            <DataGridComboBoxColumn x:Name="c_langue" Visibility="Hidden" Header="langue" DisplayMemberPath="LanguageNom" SelectedValuePath="IdLanguage" SelectedValueBinding="{Binding idlanguage}"/>
                            <DataGridComboBoxColumn x:Name="c_politesse" Visibility="Hidden" Header="politesse" DisplayMemberPath="PolitesseNom" SelectedValuePath="IdPolitesse" SelectedValueBinding="{Binding idpolitesse}"/>
                            <DataGridTextColumn x:Name="c_nom" Header="nom" Binding="{Binding nom}"/>
                            <DataGridTextColumn x:Name="c_prenom" Header="prenom" Binding="{Binding prenom}"/>
                            <DataGridTextColumn x:Name="c_co" Visibility="Hidden" Header="c/o" Binding="{Binding co}"/>
                            <DataGridTextColumn x:Name="c_adresse" Visibility="Hidden" Header="adresse" Binding="{Binding adresse1}"/>
                            <DataGridTextColumn x:Name="c_adressecompl" Visibility="Hidden" Header="adresse compl." Binding="{Binding adresse2}"/>
                            <DataGridComboBoxColumn x:Name="c_npa" Visibility="Hidden" Header="npa"/>
                            <DataGridComboBoxColumn x:Name="c_ville" Visibility="Hidden" Header="ville"/>
                            <DataGridComboBoxColumn x:Name="c_sexe" Visibility="Hidden" Header="sexe"/>
                            <DataGridTemplateColumn x:Name="c_datenaiss"  Visibility="Hidden" Header="date de naissance" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding datenaissance}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridComboBoxColumn x:Name="c_nationalite" Visibility="Hidden" Header="nationalité"/>
                            <DataGridComboBoxColumn x:Name="c_etatcivil" Visibility="Hidden" Header="état civil"/>
                            <DataGridTextColumn x:Name="c_tel1" Visibility="Hidden" Header="tél. 1"/>
                            <DataGridTextColumn x:Name="c_tel2" Visibility="Hidden" Header="tél. 2"/>
                            <DataGridTextColumn x:Name="c_natel" Visibility="Hidden" Header="Natel"/>
                            <DataGridTextColumn x:Name="c_fax" Visibility="Hidden" Header="fax"/>
                            <DataGridTextColumn x:Name="c_email" Visibility="Hidden" Header="email"/>
                            <DataGridTextColumn x:Name="c_departement" Header="département" Binding="{Binding departementnom}"/>
                            <DataGridTextColumn x:Name="c_fonction" Header="fonction" Binding="{Binding fonctionnom}"/>
                            <DataGridTextColumn x:Name="c_noavs" Header="nO AVS" Binding="{Binding numavs}"/>
                            <DataGridComboBoxColumn x:Name="c_horairetravail" Visibility="Hidden" Header="horaire de travail" ItemsSource="{StaticResource shorairetravail}"  SelectedValueBinding="{Binding horairetravail}"/>

                        </DataGrid.Columns>
                    </DataGrid>
                    <TabControl x:Name="tabControl" HorizontalAlignment="Left" Height="518" Margin="383,10,0,0" VerticalAlignment="Top" Width="673"  BorderBrush="LightSkyBlue" BorderThickness="2" SelectionChanged="tabControl_SelectionChanged">
                        <TabItem Header="         Identité       " Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5" >

                                <Grid x:Name="p_adresse" Background="#FFE5E5E5" IsEnabled="{DynamicResource bSalEdit}" Margin="0,0,0,45">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="label_Copy22" Content="num AVS" HorizontalAlignment="Left" Margin="49,8,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_numAVS" Text="{Binding numavs, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="112,11,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_nom_TextChanged" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label" Content="langue" HorizontalAlignment="Left" Margin="61,35,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_langue" SelectedValue="{Binding idlanguage, Mode=TwoWay, UpdateSourceTrigger=Explicit}" ItemsSource="{Binding}" SelectedValuePath="IdLanguage" TextSearch.TextPath="LanguageNom" HorizontalAlignment="Left" Margin="112,39,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="cmb_langue_SelectionChanged" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True" AutomationProperties.IsRequiredForForm="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Margin="0" Text="{Binding LanguageNom}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdLanguage}"/>
                                                                <TextBlock Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding LanguageNom}"/>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding Abre}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>
                                    <ComboBox x:Name="cmb_politesse" TextSearch.TextPath="PolitesseNom" SelectedValue="{Binding idpolitesse, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="IdPolitesse" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="337,39,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True" AutomationProperties.IsRequiredForForm="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Margin="2" Text="{Binding PolitesseNom}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gdpol" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdPolitesse}"/>
                                                                <TextBlock Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding PolitesseNom}"/>
                                                                <TextBlock Visibility="Hidden" Width="1" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding IdLangue}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gdpol"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gdpol"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                    </ComboBox>
                                    <Label x:Name="label_Copy" Content="politesse" HorizontalAlignment="Left" Margin="273,35,0,0" VerticalAlignment="Top"/>

                                    <Label x:Name="label_Copy1" Content="nom" HorizontalAlignment="Left" Margin="73,63,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_nom" Text="{Binding nom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="112,66,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_nom_TextChanged" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy2" Content="prénom" HorizontalAlignment="Left" Margin="278,63,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_prenom" Text="{Binding prenom, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="337,66,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True"/>

                                    <Label x:Name="label_Copy3" Content="c/o" HorizontalAlignment="Left" Margin="80,91,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_co" HorizontalAlignment="Left" Height="23" Margin="112,94,0,0" TextWrapping="Wrap" Text="{Binding co, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy4" Content="adresse" HorizontalAlignment="Left" Margin="57,119,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_adresse1" HorizontalAlignment="Left" Height="23" Margin="112,122,0,0" TextWrapping="Wrap" Text="{Binding adresse1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy5" Content="adresse 2" HorizontalAlignment="Left" Margin="47,147,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_adresse2" HorizontalAlignment="Left" Height="23" Margin="112,150,0,0" TextWrapping="Wrap" Text="{Binding adresse2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy6" Content="npa ville" HorizontalAlignment="Left" Margin="53,173,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_npacity" HorizontalAlignment="Left" Height="23" Margin="112,177,0,0" TextWrapping="Wrap" Text="{Binding npa, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" TextChanged="ed_npacity_TextChanged" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True"/>
                                    <ComboBox x:Name="cmb_npaville" TextSearch.TextPath="CityName" ItemsSource="{Binding}" SelectedValue="{Binding idville, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="IdVille" HorizontalAlignment="Left" Margin="244,178,0,0" VerticalAlignment="Top" Width="213" SelectionChanged="cmb_npaville_SelectionChanged" Style="{DynamicResource RoundComboBox}" Height="22" IsReadOnly="True" AutomationProperties.IsRequiredForForm="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <!--TextBlock Margin="2" Text="{Binding Zip}"/-->
                                                    <TextBlock Margin="2" Text="{Binding CityName}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Visibility="Hidden" Width="1" Grid.Column="0" Text="{Binding IdVille}"/>
                                                                <TextBlock Width="50" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="1" Text="{Binding Zip}"/>
                                                                <TextBlock Width="200" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="2" Text="{Binding CityName}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="Opacity" Value="0.25"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>
                                    <Label x:Name="label_Copy13" Content="tél. 1" HorizontalAlignment="Left" Margin="71,203,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_tel1" HorizontalAlignment="Left" Height="23" Margin="112,206,0,0" TextWrapping="Wrap" Text="{Binding tel1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy14" Content="tél. 1" HorizontalAlignment="Left" Margin="294,203,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_tel2" HorizontalAlignment="Left" Height="23" Margin="337,206,0,0" TextWrapping="Wrap" Text="{Binding tel2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy15" Content="mobile" HorizontalAlignment="Left" Margin="60,232,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_mobile" HorizontalAlignment="Left" Height="23" Margin="112,235,0,0" TextWrapping="Wrap" Text="{Binding mobile, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy16" Content="fax" HorizontalAlignment="Left" Margin="303,232,0,0" VerticalAlignment="Top" Width="27"/>
                                    <TextBox x:Name="ed_fax" HorizontalAlignment="Left" Height="23" Margin="337,235,0,0" TextWrapping="Wrap" Text="{Binding fax, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy17" Content="email 1" HorizontalAlignment="Left" Margin="59,261,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_email1" HorizontalAlignment="Left" Height="23" Margin="112,264,0,0" TextWrapping="Wrap" Text="{Binding email1, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy18" Content="email 2" HorizontalAlignment="Left" Margin="57,291,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_email2" HorizontalAlignment="Left" Height="23" Margin="112,294,0,0" TextWrapping="Wrap" Text="{Binding email2, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy11" Content="sexe" HorizontalAlignment="Left" Margin="74,322,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_sexe" ItemsSource="{StaticResource sexe}" SelectedItem="{Binding sexe, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="{Binding sexe}" HorizontalAlignment="Left" Margin="112,325,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy12" Content="date naissance" HorizontalAlignment="Left" Margin="242,322,0,0" VerticalAlignment="Top"/>
                                    <DatePicker HorizontalAlignment="Left" Margin="337,323,0,0" VerticalAlignment="Top" Width="120" SelectedDate="{Binding datenaissance, Converter={StaticResource DatePickerToShort1}, Mode=TwoWay, UpdateSourceTrigger=Explicit}" Style="{DynamicResource stylededate}" BorderBrush="#FF575555" DisplayDate="2018-02-23"/>


                                    <Label x:Name="label_Copy19" Content="nationalité" HorizontalAlignment="Left" Margin="41,348,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_nationalite" SelectedValue="{Binding idnationalite, Mode=TwoWay, UpdateSourceTrigger=Explicit}" ItemsSource="{Binding}" SelectedValuePath="IdNationalite" TextSearch.TextPath="NationaliteNom" HorizontalAlignment="Left" Margin="112,352,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="2" Width="25" Text="{Binding NationaliteAbr}"/>
                                                    <TextBlock Margin="2" Text="{Binding NationaliteNom}"/>
                                                </StackPanel>
                                            </DataTemplate>

                                        </ComboBox.ItemTemplate>
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Width="30"  Margin="5,1,1,2" Grid.Column="0" Text="{Binding NationaliteAbr}"/>
                                                                <TextBlock Width="80" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="1" Text="{Binding NationaliteNom}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="Opacity" Value="0.25"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                    </ComboBox>
                                    <Label x:Name="label_Copy20" Content="état civil" HorizontalAlignment="Left" Margin="276,348,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_etatcivil" ItemsSource="{StaticResource setatcivil}" SelectedItem="{Binding etatcivil, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="EtatCivil" HorizontalAlignment="Left" Margin="337,352,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_iban" HorizontalAlignment="Left" Height="23" Margin="112,379,0,0" TextWrapping="Wrap" Text="{Binding iban, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                    <Label x:Name="label_Copy74" Content="banque" HorizontalAlignment="Left" Margin="57,402,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_banque" HorizontalAlignment="Left" Height="23" Margin="112,406,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="88" Style="{DynamicResource styledetexte}" TextChanged="ed_banque_TextChanged" ToolTip="Recherche noSIC, noCB, SWIFT, NOM"/>
                                    <TextBox x:Name="ed_banque1" HorizontalAlignment="Left" Height="23" Margin="112,406,0,0" Visibility="Hidden" TextWrapping="Wrap" Text="{Binding idbanque}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_banque1_TextChanged"/>
                                    <ComboBox x:Name="cmb_banque" TextSearch.TextPath="nombanque" ItemsSource="{Binding}" SelectedValue="{Binding idbanque, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idbanque" HorizontalAlignment="Left" Margin="205,407,0,0" VerticalAlignment="Top" Width="252" Style="{DynamicResource RoundComboBox}" Height="22" IsReadOnly="True" SelectionChanged="cmb_banque_SelectionChanged" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="2" Text="{Binding nocb}"/>
                                                    <TextBlock Margin="2" Text="-"/>
                                                    <TextBlock Margin="2" Text="{Binding swift}"/>
                                                    <TextBlock Margin="2" Text="-"/>
                                                    <TextBlock Margin="2" Text="{Binding nombanque}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Width="50" Grid.Column="0" Text="{Binding nosic}"/>
                                                                <TextBlock Width="80" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="1" Text="{Binding swift}"/>
                                                                <TextBlock Width="50" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="2" Text="{Binding nomabrege}"/>
                                                                <TextBlock Width="120" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="3" Text="{Binding nombanque}"/>
                                                                <TextBlock Width="120" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="4" Text="{Binding adresse}"/>
                                                                <TextBlock Width="100" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="5" Text="{Binding casepostale}"/>
                                                                <TextBlock Width="50" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="6" Text="{Binding npa}"/>
                                                                <TextBlock Width="100" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="7" Text="{Binding ville}"/>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                    <Setter TargetName="gd"  Property="Opacity" Value="0.25"/>
                                                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                </Trigger>

                                                                <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>

                                    </ComboBox>

                                    <!--
                                    <Label x:Name="label_Copy22" Content="n0 AVS" HorizontalAlignment="Left" Margin="60,338,0,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_numavs" Text="{Binding numavs, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="112,341,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" Uid="num"/>
                                    <Label x:Name="label_Copy23" Content="genre AVS" HorizontalAlignment="Left" Margin="265,341,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_genreavs" ItemsSource="{StaticResource sgenreavs}" SelectedItem="{Binding genreavs, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="genreavs" HorizontalAlignment="Left" Margin="337,338,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="25"/>
                                    <Label x:Name="label_Copy24" Content="genre AC" HorizontalAlignment="Left" Margin="48,369,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_genreac" ItemsSource="{StaticResource sgenreac}" SelectedItem="{Binding genreac, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="genreac" HorizontalAlignment="Left" Margin="112,369,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22"/>
                                    <Label x:Name="label_Copy25" Content="genre LAA" HorizontalAlignment="Left" Margin="265,368,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_genrelaa" ItemsSource="{StaticResource sgenrelaa}" SelectedItem="{Binding genrelaa, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="genrelaa" HorizontalAlignment="Left" Margin="337,368,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22"/>
                                    <Label x:Name="label_Copy26" Content="genre LPP" HorizontalAlignment="Left" Margin="44,396,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_genrelpp" ItemsSource="{StaticResource sgenrelpp}" SelectedItem="{Binding genrelpp, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="genrelpp" HorizontalAlignment="Left" Margin="112,396,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22"/>
                                    <Label x:Name="label_Copy27" Content="caisse maladie" HorizontalAlignment="Left" Margin="244,395,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_caissemaladie" ItemsSource="{StaticResource scaissemaladie}" SelectedItem="{Binding caissemaladie, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="caissemaladie" HorizontalAlignment="Left" Margin="337,395,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22"/>
                                    -->
                                    <Grid x:Name="p_photo"  HorizontalAlignment="Left" Height="220" Margin="471,39,0,0" VerticalAlignment="Top" Width="184" Background="#FFF5EDED" IsEnabled="{DynamicResource bSalEdit}">
                                        <Image x:Name="im_image" HorizontalAlignment="Left" Margin="2,11,0,0" Source="{Binding}" Stretch="Fill" Width="180" MouseRightButtonUp="image_MouseRightButtonUp" Height="180" VerticalAlignment="Top"/>
                                        <Button x:Name="bt_photo" Content="charger photo d'identité" HorizontalAlignment="Left" Height="20" Margin="0,200,0,0" VerticalAlignment="Top" Width="184" Click="bt_photo_Click"/>
                                        <TextBox x:Name="lb_photo" Visibility="Hidden" Text="{Binding photo}" HorizontalAlignment="Left" Height="26" Margin="0,200,0,0" VerticalAlignment="Top" Width="181" TextChanged="lb_photo_TextChanged"/>
                                    </Grid>
                                    <Label x:Name="label_Copy73" Content="IBAN" HorizontalAlignment="Left" Margin="70,376,0,0" VerticalAlignment="Top"/>

                                </Grid>
                                <Grid Margin="10,440,10,1">
                                    <Button x:Name="bt_sal_ajout" Content="Ajout" HorizontalAlignment="Left" Margin="37,7,0,7" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="ajout" IsEnabled="{DynamicResource _bSalEdit}" Click="bt_sal_ajout_Click"/>
                                    <Button x:Name="bt_sal_modifier" Content="Modifier" HorizontalAlignment="Left" Margin="139,7,0,7" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="modif" IsEnabled="{DynamicResource _bSalEdit}" Click="bt_sal_modifier_Click" />
                                    <Button x:Name="bt_sal_suppr" Content="Supprimer" HorizontalAlignment="Left" Margin="237,7,0,7" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Height="32" Uid="suppr" IsEnabled="{DynamicResource _bSalEdit}" Click="bt_sal_suppr_Click"/>
                                    <Button x:Name="bt_sal_valider" Content="Valider" HorizontalAlignment="Left" Margin="333,7,0,7" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Uid="valid" Height="32" IsEnabled="{DynamicResource bSalEdit}" Click="bt_sal_valider_Click"/>
                                    <Button x:Name="bt_sal_annuler" Content="Annuler" HorizontalAlignment="Left" Margin="429,7,0,7" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Uid="annul" Height="32" IsEnabled="{DynamicResource bSalEdit}" Click="bt_sal_annuler_Click"/>
                                </Grid>

                            </Grid>
                        </TabItem>
                        <TabItem Header="       Contrat           " Style="{DynamicResource TabItemStyle1}">
                            <Grid x:Name="p_identite" Background="#FFE5E5E5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <DataGrid x:Name="g_contrat" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="90" Margin="11,117,0,0" VerticalAlignment="Top" Width="644" SelectionChanged="g_contrat_SelectionChanged">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn x:Name="ccont_date" Header="date contrat" Binding="{Binding datecontrat}"/>
                                        <DataGridTextColumn x:Name="ccont_refcontrat" Header="réf contrat" Binding="{Binding refcontrat}"/>
                                        <DataGridTextColumn x:Name="ccont_dep" Header="département" Binding="{Binding departementnom}"/>
                                        <DataGridTextColumn x:Name="ccont_fonc" Header="fonction" Binding="{Binding fonctionnom}"/>
                                        <DataGridTextColumn x:Name="ccont_occup" Header="occupation" Binding="{Binding occupation}"/>
                                        <DataGridTextColumn x:Name="ccont_encours" Header="en cours" Binding="{Binding encours}"/>


                                    </DataGrid.Columns>
                                </DataGrid>
                                <Grid x:Name="p_identitedetail" HorizontalAlignment="Left" Height="102" Margin="10,10,0,0" VerticalAlignment="Top" Width="645"  IsEnabled="{DynamicResource bContEdit}">
                                    <Label x:Name="label_Copy21" Content="occupation" HorizontalAlignment="Left" Margin="71,10,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_occupation" ItemsSource="{StaticResource soccupation}" SelectedItem="{Binding occupation, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="occupation" HorizontalAlignment="Left" Margin="148,13,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="21" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy56" Content="date contrat" HorizontalAlignment="Left" Margin="390,12,-14,0" VerticalAlignment="Top"/>
                                    <DatePicker HorizontalAlignment="Left" Margin="470,13,0,0" VerticalAlignment="Top" Width="120" SelectedDate="{Binding datecontrat, Mode=TwoWay, StringFormat=%d.%m.%Y, UpdateSourceTrigger=Explicit}" DisplayDate="2017-11-30" Style="{DynamicResource stylededate}" BorderBrush="#FF575555"/>
                                    <Label x:Name="label_Copy7" Content="département" HorizontalAlignment="Left" Margin="62,35,0,0" VerticalAlignment="Top"/>

                                    <ComboBox x:Name="cmb_departement" ItemsSource="{Binding}" DisplayMemberPath="DepartementNom" TextSearch.TextPath="DepartementNom" SelectedValue="{Binding iddepartement, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="IdDepartement" HorizontalAlignment="Left" Margin="148,39,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="cmb_departement_SelectionChanged" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy8" Content="fonction" HorizontalAlignment="Left" Margin="411,38,-14,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_fonction" ItemsSource="{Binding}" DisplayMemberPath="FonctionNom" TextSearch.TextPath="FonctionNom" SelectedValue="{Binding idfonction, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="IdFonction" HorizontalAlignment="Left" Margin="470,42,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="cmb_fonction_SelectionChanged" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True" AutomationProperties.IsRequiredForForm="True">
                                        <!--<ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="2" Text="{Binding FonctionNom}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid x:Name="gd" TextElement.Foreground="Black">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdFonction}"/>
                                                            <TextBlock Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding FonctionNom}"/>
                                                            <TextBlock Visibility="Hidden" Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding IdDepartement}"/>
                                                        </Grid>
                                                        
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>-->

                                    </ComboBox>
                                    <Label x:Name="label_Copy9" Content="horaire de travail" HorizontalAlignment="Left" Margin="41,66,0,0" VerticalAlignment="Top"/>
                                    <ComboBox x:Name="cmb_horaire" ItemsSource="{StaticResource shorairetravail}" SelectedItem="{Binding horairetravail, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="horairetravail" HorizontalAlignment="Left" Margin="148,66,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="23" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label_Copy10" Content="nbr H/Semaine" HorizontalAlignment="Left" Margin="375,66,-14,0" VerticalAlignment="Top"/>
                                    <TextBox x:Name="ed_nbrheuretravail" Text="{Binding nbrheuretravail, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="470,69,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" Uid="num" AutomationProperties.IsRequiredForForm="True"/>

                                </Grid>
                                <Button x:Name="bt_cont_ajout" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource _bSalEdit}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="13,213,0,0" Click="bt_cont_ajout_Click"/>
                                <Button x:Name="bt_cont_valid" Content="-" HorizontalAlignment="Left" Margin="138,213,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bContEdit}" Background="#FFBACCEC" Uid="valid" Height="30" Click="bt_cont_valid_Click" />
                                <Button x:Name="bt_cont_annul" Content="-" HorizontalAlignment="Left" Margin="173,213,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bContEdit}" Background="#FFBACCEC" Uid="annul" Height="30" Click="bt_cont_annul_Click" />
                                <Button x:Name="bt_cont_modif" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="modif" Height="30" IsEnabled="{DynamicResource _bContEdit}" Margin="48,213,0,0" Click="bt_cont_modif_Click" />
                                <Button x:Name="bt_cont_suppr" Content="-" HorizontalAlignment="Left" Margin="83,213,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" IsEnabled="{DynamicResource _bContEdit}" Click="bt_cont_suppr_Click"/>
                                <Button x:Name="bt_cont_encours" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="other" Height="30" IsEnabled="{DynamicResource _bContEdit}" Margin="234,213,0,0" Tag="Resources/preferences.png" ToolTip="Définir en tant que Contrat actuel" Click="bt_cont_encours_Click" />

                            </Grid>
                        </TabItem>
                        <TabItem x:Name="tabDonneebase" Header="Données de Base" HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Style="{DynamicResource TabItemStyle1}">
                            <Grid x:Name="p_donneebase" Background="#FFE5E5E5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label x:Name="label_Copy65" Content="Salaire Brut mensuel" HorizontalAlignment="Left" Margin="17,16,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="ed_mtt_salairemens" Text="" HorizontalAlignment="Left" Height="23" Margin="138,19,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="83" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num" GotFocus="ed_mtt_salairemens_GotFocus" TextChanged="ed_mtt_salairemens_TextChanged"/>
                                <TextBox x:Name="ed_mtt_repartitionmois" Text="" HorizontalAlignment="Left" Height="23" Margin="598,19,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" Style="{DynamicResource styledetexte}" Uid="num" MaxLength="2" Visibility="Hidden"/>
                                <Label x:Name="label_Copy66" Content="Taux Institutions Sociales" HorizontalAlignment="Left" Margin="16,193,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label_Copy67" Content="Treizième" HorizontalAlignment="Left" Margin="268,16,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="ed_mtt_treizieme" Text="" HorizontalAlignment="Left" Height="23" Margin="333,19,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="83" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num" TextChanged="ed_mtt_treizieme_TextChanged" />
                                <TextBox x:Name="ed_mtt_tauxpercue" Text="" HorizontalAlignment="Left" Height="23" Margin="493,71,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="49" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=cmb_listecode}" Uid="num" MaxLength="6"/>
                                <DataGrid x:Name="gv_donneebasesalarie" SelectionMode="Extended" AutoGenerateColumns="False" Height="158" Margin="16,222,18,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" MouseDoubleClick="gv_donneebasesalarie_MouseDoubleClick" CellEditEnding="gv_donneebasesalarie_CellEditEnding" >
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn x:Name="CkB" Width="20" Binding="{Binding selectionne, Mode=TwoWay}" />
                                        <DataGridTextColumn Width="45" IsReadOnly="True" Header="type" Binding="{Binding typeparam}"/>
                                        <DataGridTextColumn Width="140" IsReadOnly="True" Header="code" Binding="{Binding txtparam}"/>
                                        <DataGridTextColumn Width="80" Header="base calcul" Binding="{Binding formulebase}"/>
                                        <DataGridTextColumn Width="140" IsReadOnly="True" Header="critère" Binding="{Binding conditioncalc}"/>
                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="employé" CellStyle="{StaticResource colonnedroite}" Binding="{Binding tauxemploye}"/>
                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="employeur" CellStyle="{StaticResource colonnedroite}" Binding="{Binding tauxemployeur}"/>
                                        <!--DataGridTextColumn Width="50" IsReadOnly="True" Header="déduc°" Binding="{Binding deduction}"/-->
                                        <DataGridCheckBoxColumn Width="45" IsReadOnly="True" Visibility="Hidden" Header="déd°" Binding="{Binding deduction, Converter={StaticResource PlusMoinsToBooleanConverter}}"/>

                                    </DataGrid.Columns>
                                    <DataGrid.GroupStyle>
                                        <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                                            <GroupStyle.Panel>
                                                <ItemsPanelTemplate>
                                                    <DataGridRowsPresenter/>
                                                </ItemsPanelTemplate>
                                            </GroupStyle.Panel>

                                        </GroupStyle>
                                    </DataGrid.GroupStyle>
                                </DataGrid>
                                <ComboBox x:Name="cmb_bd_genrelpp" TextSearch.TextPath="typeplan" SelectedValue="{Binding idcalcullpp, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idcalcullpp" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="85,407,0,0" VerticalAlignment="Top" Width="181" Style="{DynamicResource RoundComboBox}" Height="22" IsEditable="True" AutomationProperties.IsRequiredForForm="True" SelectionChanged="cmb_bd_genrelpp_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="2" Text="{Binding typeplan}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid x:Name="gdpol" TextElement.Foreground="Black">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>

                                                            <TextBlock Width="50" Margin="5" Grid.Column="0" Text="{Binding typeplan}"/>
                                                            <TextBlock Width="60" Margin="5" TextAlignment="Right" Grid.Column="1" Text="{Binding seuilentree}"/>
                                                            <TextBlock Width="60" Margin="5" TextAlignment="Right" Grid.Column="2" Text="{Binding salaireannuelref}"/>
                                                            <TextBlock Width="60" Margin="5" TextAlignment="Right" Grid.Column="3" Text="{Binding deductioncoord}"/>
                                                            <TextBlock Width="60" Margin="5" TextAlignment="Right" Grid.Column="4" Text="{Binding salaireassuremax}"/>
                                                            <TextBlock Width="60" Margin="5" TextAlignment="Right" Grid.Column="5" Text="{Binding salaireassuremin}"/>
                                                            <TextBlock Visibility="Hidden" Width="1" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding IdLangue}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                <Setter TargetName="gdpol"  Property="Background" Value="Gray"/>
                                                                <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="gdpol"  Property="Background" Value="Blue"/>
                                                                <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                                <Label x:Name="label_Copy23" Content="Calcul LPP :" HorizontalAlignment="Left" Margin="16,382,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="ed_mtt_sallppbase" Text="" HorizontalAlignment="Left" Height="23" Margin="271,406,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="83" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num"/>
                                <Label x:Name="label_Copy24" Content="genre" HorizontalAlignment="Left" Margin="85,381,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="ed_mtt_sallpptauxemploye" Text="" HorizontalAlignment="Left" Height="23" Margin="359,406,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num"/>
                                <TextBox x:Name="ed_mtt_sallpprepartition" Text="" HorizontalAlignment="Left" Height="23" Margin="439,407,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="39" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" Uid="num" MaxLength="2"/>
                                <TextBox x:Name="ed_mtt_sallpptauxemployeur" Visibility="Hidden" Text="" HorizontalAlignment="Left" Height="23" Margin="439,407,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="75" Style="{DynamicResource styledetexte}" TextChanged="ed_nom_TextChanged" AutomationProperties.IsRequiredForForm="True" Uid="num"/>
                                <Label x:Name="label_Copy25" Content="base" HorizontalAlignment="Left" Margin="271,381,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label_Copy26" Content="taux" HorizontalAlignment="Left" Margin="359,381,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="bt_bd_valider" Content="Valider Base Calcul Salarié" HorizontalAlignment="Left" Margin="467,445,0,10" VerticalAlignment="Center" Width="180" Style="{DynamicResource styleboutonmenu}" Uid="valid" Height="32" IsEnabled="{DynamicResource _bBaseCalc}"  Click="bt_bd_valider_Click" />
                                <Button x:Name="bt_bd_reinitialiser" Content="Réinitialiser données" HorizontalAlignment="Left" Margin="309,445,0,10" VerticalAlignment="Center" Width="153" Style="{DynamicResource styleboutonmenu}" Uid="annul" Height="32" IsEnabled="{DynamicResource bBaseCalc}" Click="bt_bd_reinitialiser_Click"/>
                                <Label x:Name="label_Copy68" Content="taux" HorizontalAlignment="Left" Margin="448,69,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label_Copy69" Content="repartition mois" HorizontalAlignment="Left" Margin="439,381,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label_Copy70" Content="Répartition mois" HorizontalAlignment="Left" Margin="484,16,0,0" VerticalAlignment="Top" Visibility="Hidden"/>
                                <DataGrid x:Name="gv_donneebasesalariepercue" SelectionMode="Extended" AutoGenerateColumns="False" Height="93" Margin="16,100,18,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" MouseDoubleClick="gv_donneebasesalarie_MouseDoubleClick" CellEditEnding="gv_donneebasesalarie_CellEditEnding" HeadersVisibility="Column" >
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn x:Name="CkB1" Width="20" Binding="{Binding selectionne, Mode=TwoWay}" />
                                        <DataGridTextColumn Width="45" IsReadOnly="True" Header="type" Binding="{Binding typeparam}"/>
                                        <DataGridTextColumn Width="185" IsReadOnly="True" Header="code" Binding="{Binding txtparam}"/>
                                        <DataGridTextColumn Width="181" Header="base calcul" CellStyle="{StaticResource colonnedroite}" Binding="{Binding formulebase}"/>
                                        <!--DataGridTextColumn Width="140" IsReadOnly="True" Header="critère" Binding="{Binding conditioncalc}"/-->
                                        <DataGridTextColumn Width="100" IsReadOnly="True" Header="taux" CellStyle="{StaticResource colonnedroite}" Binding="{Binding tauxemploye}"/>
                                        <!--DataGridTextColumn Width="50" IsReadOnly="True" Header="déduc°" Binding="{Binding deduction}"/-->

                                    </DataGrid.Columns>
                                    <DataGrid.GroupStyle>
                                        <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}">
                                            <GroupStyle.Panel>
                                                <ItemsPanelTemplate>
                                                    <DataGridRowsPresenter/>
                                                </ItemsPanelTemplate>
                                            </GroupStyle.Panel>

                                        </GroupStyle>
                                    </DataGrid.GroupStyle>
                                </DataGrid>
                                <ComboBox x:Name="cmb_listecode" HorizontalAlignment="Left" Margin="15,72,0,0" VerticalAlignment="Top" Width="206">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Margin="5,2,0,0" Text="{Binding typeparam}"/>
                                                <TextBlock Margin="5,2,0,0" Text="{Binding txtparam}"/>
                                                
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid x:Name="gd" TextElement.Foreground="Black">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Width="50" Margin="5,2,0,0" Grid.Column="0" Text="{Binding typeparam}"/>
                                                            <TextBlock Width="100" Margin="5,2,0,0" TextAlignment="Left" Grid.Column="1" Text="{Binding txtparam}"/>
                                                            <TextBlock Width="150" Margin="5,2,0,0" TextAlignment="Left" Grid.Column="2" Text="{Binding conditioncalc}"/>
                                                            <TextBlock Width="50" Margin="5,2,0,0" TextAlignment="Left" Grid.Column="3" Text="{Binding tauxemploye}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                                <TextBox x:Name="ed_mtt_salannu" Text="" HorizontalAlignment="Left" IsReadOnly="True" Height="23" Margin="555,19,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="92" TextChanged="ed_mtt_salaireannuel_TextChanged" Style="{DynamicResource styledetexte}" Uid="num" MaxLength="2"/>
                                <Label x:Name="label_Copy75" Content="Salaire Annuel" HorizontalAlignment="Left" Margin="465,16,0,0" VerticalAlignment="Top"/>
                                <Label x:Name="label_Copy76" Content="Bases perçues" HorizontalAlignment="Left" Margin="17,46,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="bt_bd_ajoutpercue" Content="ajouter" HorizontalAlignment="Left" Margin="555,69,0,391" VerticalAlignment="Center" Width="91" Style="{DynamicResource styleboutonmenu}" Uid="ajout" Height="27" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=cmb_listecode}" Click="bt_bd_ajoutpercue_Click"  />
                                <Label x:Name="label_Copy77" Content="calcul" HorizontalAlignment="Left" Margin="268,68,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="ed_mtt_basepercue" Text="" HorizontalAlignment="Left" Height="23" Margin="333,71,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="83" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True"  IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=cmb_listecode}" Uid="num" TextChanged="ed_mtt_salaireannuel_TextChanged"/>

                            </Grid>
                        </TabItem>
                        <TabItem Header="Données Résumé" HorizontalAlignment="Left" VerticalAlignment="Top" Width="133" Style="{DynamicResource TabItemStyle1}" Margin="0,0,-33,0">
                            <Grid Background="#FFE5E5E5">
                                <DataGrid x:Name="gv_donneeresume" SelectionMode="Extended" AutoGenerateColumns="False" Height="233" Margin="16,55,23,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" MouseDoubleClick="gv_donneebasesalarie_MouseDoubleClick" >
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.Columns>
                                        <DataGridTextColumn Width="120" IsReadOnly="True" Header="code" Binding="{Binding txtresume}"/>
                                        <DataGridTextColumn Width="180" IsReadOnly="True" Header="désignation" Binding="{Binding txtparam}"/>
                                        <DataGridTextColumn Width="60" IsReadOnly="True" Header="unité" CellStyle="{StaticResource colonnedroite}" Binding="{Binding unite}"/>
                                        <DataGridTextColumn Width="90" IsReadOnly="True" Header="base" CellStyle="{StaticResource colonnedroite}" Binding="{Binding basemasse}"/>
                                        <DataGridTextColumn Width="80" IsReadOnly="True" Header="taux" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding taux}"/>
                                        <!--DataGridTextColumn Width="80" IsReadOnly="True" Header="employeur" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding taux}"/-->
                                        <DataGridCheckBoxColumn Width="70" IsReadOnly="True" Header="déduction" Binding="{Binding deduction, Converter={StaticResource PlusMoinsToBooleanConverter}}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                                <TextBlock x:Name="textBlock1" HorizontalAlignment="Left" Height="26" Margin="16,24,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="500">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{Binding nom}" Width="auto"/>
                                        <Label Content=" "  Width="auto"/>
                                        <Label Content="{Binding prenom}" Width="auto"/>
                                        <Label Content=" nO AVS :" Width="auto"/>
                                        <Label Content="{Binding numavs}" Width="auto"/>
                                    </StackPanel>
                                </TextBlock>
                            </Grid>
                        </TabItem>


                    </TabControl>

                </Grid>
            </TabItem>
            <TabItem Header="GESTION SALAIRE" Margin="5,0" Padding="0,2" Uid="2">
                <Grid x:Name="g_gessalaire" Background="#FFE4C69A" Height="auto">
                    <TabControl x:Name="tb_gessalaire" HorizontalAlignment="Left" Height="518" Margin="10,10,0,0" VerticalAlignment="Top" Width="1046" BorderBrush="LightSkyBlue" BorderThickness="2">
                        <TabItem Header="  Grille salaire  " Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5" Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Margin="10,78,10,126"  >
                                    <DataGrid x:Name="gv_grillesalaire" AutoGenerateColumns="False" Height="279" Margin="0,0,0,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" FrozenColumnCount="4" HorizontalGridLinesBrush="Gray" HeadersVisibility="Column" SelectedCellsChanged="gv_grillesalaire_SelectedCellsChanged" SelectionUnit="Cell" >
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Width="120" IsReadOnly="True" Header="Désignation" Binding="{Binding txtligne}"/>
                                            <DataGridTextColumn Width="50" IsReadOnly="True" Header="Unité" CellStyle="{StaticResource colonnedroite}" Binding="{Binding unite}"/>
                                            <DataGridTextColumn Width="70" Visibility="Visible" IsReadOnly="True" Header="Base" CellStyle="{StaticResource colonnedroite}" Binding="{Binding basemasse}"/>
                                            <DataGridTextColumn Width="50" IsReadOnly="True" Header="taux" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding taux}"/>
                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Janvier" Binding="{Binding valeur1}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=1}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Février"  Binding="{Binding valeur2}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=2}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Mars" Binding="{Binding valeur3}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=3}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Avril" Binding="{Binding valeur4}" >
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=4}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Mai" Binding="{Binding valeur5}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=5}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Juin" Binding="{Binding valeur6}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=6}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Juillet" Binding="{Binding valeur7}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=7}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Août" Binding="{Binding valeur8}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=8}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Septembre"  Binding="{Binding valeur9}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=9}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Octobre"  Binding="{Binding valeur10}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=10}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Novembre"  Binding="{Binding valeur11}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=11}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn Width="70" IsReadOnly="True" Header="Décembre" Binding="{Binding valeur12}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=12}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>

                                            <DataGridTextColumn FontWeight="Bold" Width="70" IsReadOnly="True" Header="Sous-Total" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding totannee}"/>
                                            <DataGridTextColumn FontWeight="SemiBold" Width="70" IsReadOnly="True" Header="Treizième" Binding="{Binding treisieme}">
                                                <DataGridTextColumn.CellStyle>
                                                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource colonnedroite}">
                                                        <Style.Triggers>
                                                            <!--Test si colonne mois compris dans variable imoispaye-->
                                                            <DataTrigger Binding="{Binding Converter={StaticResource CheckMoispaye}, ConverterParameter=13}" Value="true">
                                                                <Setter Property="Background" Value="AntiqueWhite"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </DataGridTextColumn.CellStyle>
                                            </DataGridTextColumn>


                                            <DataGridTextColumn FontWeight="Bold" Foreground="Blue" Width="70" IsReadOnly="True" Header="Total Général" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding totalgeneral}"/>

                                        </DataGrid.Columns>
                                        <DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding deduction}" Value="0">
                                                        <!--DataTrigger Binding="{Binding ItemTemplate, Converter={StaticResource ItemsContenuConverter}, ElementName=gv_grillesalaire}" Value="TOTDED"-->
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Background" Value="#FFF0F0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding deduction}" Value="+">
                                                        <!--DataTrigger Binding="{Binding ItemTemplate, Converter={StaticResource ItemsContenuConverter}, ElementName=gv_grillesalaire}" Value="TOTDED"-->
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Background" Value="#FFF0F0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding code}" Value="TOTDED">
                                                        <!--DataTrigger Binding="{Binding ItemTemplate, Converter={StaticResource ItemsContenuConverter}, ElementName=gv_grillesalaire}" Value="TOTDED"-->
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Background" Value="#FFF0F0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding code}" Value="SALMENS">
                                                        <!--DataTrigger Binding="{Binding ItemTemplate, Converter={StaticResource ItemsContenuConverter}, ElementName=gv_grillesalaire}" Value="TOTDED"-->
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Background" Value="#FFF0F0F0"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding code}" Value="SALNET">
                                                        <!--DataTrigger Binding="{Binding ItemTemplate, Converter={StaticResource ItemsContenuConverter}, ElementName=gv_grillesalaire}" Value="TOTDED"-->
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="Background" Value="#FFF0F0F0"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <!--DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <DataTrigger Binding = "{Binding valeur6}" Value = "0.00">

                                                        <Setter Property="Background" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </!-->
                                        <!--DataGrid.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Style.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Binding="{Binding code}" Value="PAYE"/>
                                                            <Condition Binding="{Binding annee}" Value = "2018"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" Value="Red"/>
                                                    </MultiTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </!-->
                                        <!--DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <DataGrid FrozenColumnCount="4">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Width="290" IsReadOnly="True" Header="Désignation" Binding="{Binding txtligne}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Janvier" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Février" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Mars" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Avril" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Mai" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Juin" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Juillet" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Août" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Septembre" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Octobre" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Novembre" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Décembre" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                        <DataGridTextColumn Width="70" IsReadOnly="True" Header="Sous-Total" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                                    </DataGrid.Columns>
                                                </DataGrid>
                                            </DataTemplate>

                                        </-->
                                    </DataGrid>
                                </StackPanel>
                                <ComboBox x:Name="cmb_grille_salarie" IsReadOnly="True" TextSearch.TextPath="nom" SelectedValue="{Binding idsalaries, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="idsalaries" ItemsSource="{Binding ItemsSource, ElementName=dataGrid}" HorizontalAlignment="Left" Margin="86,36,0,0" VerticalAlignment="Top" Width="421" Style="{DynamicResource RoundComboBox}" Height="22" SelectionChanged="cmb_grille_salarie_SelectionChanged">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Margin="2" Text="{Binding nom}" Width="auto"/>
                                                <TextBlock Margin="2" Text="{Binding prenom}" Width="auto"/>
                                                <TextBlock Margin="2" Text="-" Width="auto"/>
                                                <TextBlock Margin="2" Text="{Binding numavs}" Width="auto"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid x:Name="gdpol" TextElement.Foreground="Black">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Margin="5,1,1,2" Width="120" Grid.Column="0" Text="{Binding nom}"/>
                                                            <TextBlock Width="100" Margin="5,1,1,2"  TextAlignment="Left" Grid.Column="1" Text="{Binding prenom}"/>
                                                            <TextBlock Width="100" Margin="5,1,1,2" TextAlignment="Left" Grid.Column="2" Text="{Binding numavs}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                <Setter TargetName="gdpol"  Property="Background" Value="Gray"/>
                                                                <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="gdpol"  Property="Background" Value="Blue"/>
                                                                <Setter TargetName="gdpol"  Property="TextElement.Foreground" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                                <Label x:Name="label_Copy27" Content="employé :" HorizontalAlignment="Left" Margin="19,32,0,0" VerticalAlignment="Top"/>
                                <Button x:Name="bt_grille_valider" Content=" Valider la Grille de Salaire" HorizontalAlignment="Left" Margin="848,361,0,94" VerticalAlignment="Center" Width="180" Style="{DynamicResource styleboutonmenu}" Uid="valid" Height="32" IsEnabled="{DynamicResource _bGrilleValide}" Click="bt_grille_valider_Click" Visibility="Hidden" />
                                <Button x:Name="bt_grille_reinitialiser" Content="  Réinitialiser grille" HorizontalAlignment="Left" Margin="690,361,0,94" VerticalAlignment="Center" Width="153" Style="{DynamicResource styleboutonmenu}" Uid="annul" Height="32" IsEnabled="{DynamicResource bGrilleValide}" Click="bt_grille_reinitialiser_Click" Visibility="Hidden"/>
                                <CheckBox x:Name="ck_toutmodifierapartir" Content="tout modifier à partir de là" HorizontalAlignment="Left" Margin="11,370,0,0" VerticalAlignment="Top" HorizontalContentAlignment="Right" FlowDirection="RightToLeft"/>
                                <TextBox x:Name="ed_grille_mttmodifval"  HorizontalAlignment="Left" Height="23" Margin="184,365,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="69" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_grille_modifval_KeyUp" IsEnabled="False"/>
                                <Button x:Name="bt_grille_modifvalider" Content="-" HorizontalAlignment="Left" Margin="258,362,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="False" Background="#FFBACCEC" Uid="valid" Height="30" Click="bt_grille_modifvalider_Click" />
                                <Button x:Name="bt_grilleImprimer" Content="  Imprimer Fiche" HorizontalAlignment="Left" Height="32" Margin="527,361,0,0" VerticalAlignment="Top" Width="153" IsEnabled="{DynamicResource bMoisValide}" Click="button_Click" Style="{DynamicResource styleboutonmenu}" Tag="Resources/printer.ico"/>
                                <Button x:Name="bt_grillePaiement" Content="  Effectuer paiement" HorizontalAlignment="Left" Height="32" Margin="369,361,0,0" VerticalAlignment="Top" Width="153" IsEnabled="{DynamicResource bMoisPaye}" Style="{DynamicResource styleboutonmenu}" Tag="Resources/Prop.gif" Click="bt_grillePaiement_Click"/>
                                <Button x:Name="bt_grillesuivant" Content="Button" HorizontalAlignment="Left" Margin="557,32,0,0" VerticalAlignment="Top" Width="31" Click="bt_grillesuivant_Click" Style="{DynamicResource styledebouton1}" Height="30" Tag="Resources/media-skip-forward.ico" Uid="other"/>
                                <Button x:Name="bt_grilleprecedent" Content="" HorizontalAlignment="Left" Margin="523,32,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Height="30" Tag="Resources/media-skip-backward.ico" Uid="other" Click="bt_grilleprecedent_Click"/>
                                <Menu x:Name="menu" HorizontalAlignment="Left" Height="26" Margin="599,36,0,0" VerticalAlignment="Top" Width="164">
                                    <MenuItem Header="Gestion grille de l'employé" Height="26" Width="164" FontWeight="Bold" Foreground="#FF646464">
                                        <MenuItem Header="Valider la grille salaire de l'employé" IsEnabled="{DynamicResource _bGrilleValide}" Click="bt_grille_valider_Click" />
                                        <MenuItem Header="Réinitialiser la grille de l'employé"  IsEnabled="{DynamicResource bGrilleValide}" Click="bt_grille_reinitialiser_Click"/>
                                    </MenuItem>
                                </Menu>

                            </Grid>
                        </TabItem>
                        <TabItem Header="  Paiement Salaire et Charge " Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5" Margin="0">
                                <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="88" Margin="11,329,0,0" VerticalAlignment="Top" Width="1017" CornerRadius="5">
                                    <Grid x:Name="p_paiement" HorizontalAlignment="Left" Height="79" VerticalAlignment="Top" Width="997" Margin="9,9,0,0">
                                        <Label x:Name="lb_paiement_mois" Content="mois" HorizontalAlignment="Left" Margin="111,8,0,0" VerticalAlignment="Top" Width="115"/>
                                        <DatePicker x:Name="dt_datemouvement" HorizontalAlignment="Left" Margin="167,33,0,0" VerticalAlignment="Top" Width="105"  Style="{DynamicResource stylededate}" BorderBrush="#FF575555" DisplayDate="2018-02-23"/>
                                        <Label x:Name="label_Copy78" Content="date mouvement compta." HorizontalAlignment="Left" Margin="10,32,0,0" VerticalAlignment="Top" Width="152"/>
                                        <Button x:Name="bt_paiement_envoyer" Content="envoyer les paiements" Tag="Resources/Move.png"  HorizontalAlignment="Left" Margin="300,33,0,22" VerticalAlignment="Center" Width="154" Style="{DynamicResource styleboutonmenu}" Height="24" IsEnabled="{Binding ItemsSource, Converter={StaticResource PremierPaiementAenvoyer}, ElementName=gv_paiementnvoie, Mode=OneWay}" Click="bt_paiement_envoyer_Click"/>
                                        <Label x:Name="label4" Content="Salaire mois de :" HorizontalAlignment="Left" Height="24" Margin="10,8,0,0" VerticalAlignment="Top" Width="101"/>
                                        <Button x:Name="bt_paiement_annuler" Content="annuler les paiements sélectionnés" HorizontalAlignment="Left" Margin="734,33,0,22" VerticalAlignment="Center" Width="253" Style="{DynamicResource styleboutonmenu}" Height="24" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=gv_paiementnvoie, Mode=OneWay}" Uid="annul" Click="bt_paiement_annuler_Click"/>
                                        <Button x:Name="bt_calculcharge" Content="comptabiliser les charges pour ce mois" HorizontalAlignment="Left" Height="24" Margin="469,33,0,0" VerticalAlignment="Top" Width="253" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurItemPaiementComptabiliseConverter}, ElementName=gv_paiementnvoie}" Style="{DynamicResource styleboutonmenu}" Tag="Resources/settings_16.png" Click="bt_calculcharge_Click"/>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="269" Margin="10,55,0,0" VerticalAlignment="Top" Width="1018" CornerRadius="5">
                                    <Grid x:Name="p_paiementliste" HorizontalAlignment="Left" Height="252" VerticalAlignment="Top" Width="998" Margin="9,9,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="891*"/>
                                            <ColumnDefinition Width="80*"/>
                                            <ColumnDefinition Width="27*"/>
                                        </Grid.ColumnDefinitions>
                                        <DataGrid x:Name="gv_paiementnvoie" AutoGenerateColumns="False" Height="218" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" FrozenColumnCount="4" HorizontalGridLinesBrush="Gray" HeadersVisibility="Column" Grid.ColumnSpan="3" SelectedCellsChanged="gv_paiementnvoie_SelectedCellsChanged" >

                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>

                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>

                                            <DataGrid.Columns>
                                                <DataGridTextColumn Width="180" IsReadOnly="True" Header="Bénéficiaire" Binding="{Binding beneficiaire}"/>
                                                <DataGridTextColumn Width="140" IsReadOnly="True" Header="Adresse" Binding="{Binding adresse}"/>
                                                <DataGridTextColumn Width="120" IsReadOnly="True" Header="npa ville" Binding="{Binding npaville}"/>
                                                <DataGridTextColumn Width="140" IsReadOnly="True" Header="IBAN" Binding="{Binding iban}"/>
                                                <DataGridTextColumn Width="100" IsReadOnly="True" Header="SWIFT" Binding="{Binding swift}"/>
                                                <DataGridTextColumn Width="70" IsReadOnly="True" Header="Salaire" Binding="{Binding moistexte}"/>
                                                <DataGridTextColumn Width="70" IsReadOnly="True" Header="Date paie." Binding="{Binding datepaiement}"/>
                                                <DataGridTextColumn Width="55" IsReadOnly="True" Header="Compta" Binding="{Binding envoye}"/>
                                                <DataGridTextColumn Width="50" IsReadOnly="True" Header="Charge" Binding="{Binding charge}"/>

                                                <DataGridTextColumn Width="60" IsReadOnly="True" Header="Montant" CellStyle="{StaticResource colonnedroite}"  Binding="{Binding valeur}"/>
                                            </DataGrid.Columns>

                                        </DataGrid>
                                        <Label x:Name="lb_totpaiementenvoie" Content="0.00" HorizontalAlignment="Left" Margin="0,217,0,0" VerticalAlignment="Top" Width="80" Grid.Column="1" FontWeight="Bold" HorizontalContentAlignment="Right"/>
                                        <Label x:Name="label_Copy84" Content="TOTAL :" HorizontalAlignment="Left" Margin="834,217,0,0" VerticalAlignment="Top" Width="52" FontWeight="Bold"/>

                                    </Grid>
                                </Border>
                                <RadioButton x:Name="op_envoipaiement" IsChecked="{Binding Path=dfds}" Content="ENVOI PAIEMENT" HorizontalAlignment="Left" Margin="22,24,0,0" VerticalAlignment="Top" Checked="op_envoipaiement_Checked">

                                </RadioButton>

                                <RadioButton x:Name="op_paiementenvoye" Content="PAIEMENTS EFFECTUES" HorizontalAlignment="Left" Margin="159,24,0,0" VerticalAlignment="Top" Checked="op_paiementenvoye_Checked"/>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="PARAMETRES" Margin="5,0" Uid="2" Height="auto">
                <Grid x:Name="g_parametres" Background="#FFE4C69A" Height="auto">
                    <TabControl x:Name="tabControl1" HorizontalAlignment="Left" Height="518" Margin="10,10,0,0" VerticalAlignment="Top" Width="1046" BorderBrush="LightSkyBlue" BorderThickness="2">
                        <TabItem Header="Institutions Sociales" Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5" Margin="0">
                                <Border x:Name="p_bord" Background="#FFE5E5E5" Margin="519,10,10,10" BorderBrush="LightSkyBlue" BorderThickness="1" CornerRadius="5">
                                    <Grid x:Name="p_param_adresseinst" IsEnabled="{DynamicResource bInsEdit}">
                                        <Label x:Name="label_Copy55" Content="nO Réf Police" HorizontalAlignment="Left" Margin="27,24,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_norefpolice" Text="{Binding norefpolice}" HorizontalAlignment="Left" Height="23" Margin="112,24,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" TextChanged="ed_nom_TextChanged"/>
                                        <Label x:Name="label2" Content="langue" HorizontalAlignment="Left" Margin="286,20,0,0" VerticalAlignment="Top"/>
                                        <ComboBox x:Name="cmb_inst_langue" SelectedValue="{Binding idlanguage, Mode=TwoWay, UpdateSourceTrigger=Explicit}" ItemsSource="{Binding}" SelectedValuePath="IdLanguage" TextSearch.TextPath="LanguageNom" HorizontalAlignment="Left" Margin="337,24,0,0" VerticalAlignment="Top" Width="120" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Margin="0" Text="{Binding LanguageNom}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ComboBoxItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdLanguage}"/>
                                                                    <TextBlock Width="100" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding LanguageNom}"/>
                                                                    <TextBlock Visibility="Hidden" Width="1" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding Abre}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>

                                                                    <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                    <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                        <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                        <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                        <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                    </Trigger>

                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>

                                        </ComboBox>
                                        <Label x:Name="label_Copy29" Content="société" HorizontalAlignment="Left" Margin="60,48,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_societe" Text="{Binding societe}" HorizontalAlignment="Left" Height="23" Margin="112,51,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True" TextChanged="ed_nom_TextChanged"/>
                                        <Label x:Name="label_Copy30" Content="c/o" HorizontalAlignment="Left" Margin="80,76,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst__co" HorizontalAlignment="Left" Height="23" Margin="112,79,0,0" TextWrapping="Wrap" Text="{Binding co}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy41" Content="adresse" HorizontalAlignment="Left" Margin="57,104,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_adresse1" HorizontalAlignment="Left" Height="23" Margin="112,107,0,0" TextWrapping="Wrap" Text="{Binding adresse1}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}" AutomationProperties.IsRequiredForForm="True"/>
                                        <Label x:Name="label_Copy42" Content="adresse 2" HorizontalAlignment="Left" Margin="47,132,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_adresse2" HorizontalAlignment="Left" Height="23" Margin="112,135,0,0" TextWrapping="Wrap" Text="{Binding adresse2}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy43" Content="npa ville" HorizontalAlignment="Left" Margin="53,158,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_npacity" HorizontalAlignment="Left" Height="23" Margin="112,162,0,0" TextWrapping="Wrap" Text="{Binding npa, Mode=TwoWay, UpdateSourceTrigger=Explicit}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}" TextChanged="ed_inst_npacity_TextChanged_1" AutomationProperties.IsRequiredForForm="True"/>
                                        <ComboBox x:Name="cmb_inst_npaville" TextSearch.TextPath="CityName" ItemsSource="{Binding}" SelectedValue="{Binding idville, Mode=TwoWay,UpdateSourceTrigger=Explicit}" SelectedValuePath="IdVille" HorizontalAlignment="Left" Margin="244,163,0,0" VerticalAlignment="Top" Width="213" SelectionChanged="cmb_npaville_SelectionChanged" IsEditable="True" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Margin="2" Text="{Binding Zip}"/>
                                                        <TextBlock Margin="2" Text="{Binding CityName}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>

                                            <ComboBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ComboBoxItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Grid x:Name="gd" TextElement.Foreground="Black">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Visibility="Hidden" Width="1" Margin="5" Grid.Column="0" Text="{Binding IdVille}"/>
                                                                    <TextBlock Width="50" Margin="5" TextAlignment="Left" Grid.Column="1" Text="{Binding Zip}"/>
                                                                    <TextBlock Width="200" Margin="5" TextAlignment="Left" Grid.Column="2" Text="{Binding CityName}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>

                                                                    <!--IsHighlighted and IsMouseOver is showing same effect but IsHighlighted is used for showing logical focus( for understanding check using tab key)-->

                                                                    <!--<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
                                    <Setter TargetName="gd"  Property="Background" Value="Yellow"></Setter>
                                    <Setter TargetName="gd"  Property="TextElement.Foreground" Value="Black"></Setter>
                                </Trigger>-->
                                                                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                                                                        <Setter TargetName="gd"  Property="Background" Value="Gray"/>
                                                                        <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="gd"  Property="Background" Value="Blue"/>
                                                                        <Setter TargetName="gd"  Property="TextElement.Foreground" Value="White"/>
                                                                    </Trigger>

                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ComboBox.ItemContainerStyle>

                                        </ComboBox>
                                        <Label x:Name="label_Copy44" Content="tél. 1" HorizontalAlignment="Left" Margin="71,189,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_tel1" HorizontalAlignment="Left" Height="23" Margin="112,192,0,0" TextWrapping="Wrap" Text="{Binding tel1}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy45" Content="tél. 2" HorizontalAlignment="Left" Margin="294,189,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_tel2" HorizontalAlignment="Left" Height="23" Margin="337,192,0,0" TextWrapping="Wrap" Text="{Binding tel2}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy46" Content="mobile" HorizontalAlignment="Left" Margin="60,218,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_mobile" HorizontalAlignment="Left" Height="23" Margin="112,221,0,0" TextWrapping="Wrap" Text="{Binding mobile}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy47" Content="fax" HorizontalAlignment="Left" Margin="303,218,0,0" VerticalAlignment="Top" Width="27"/>
                                        <TextBox x:Name="ed_inst_fax" HorizontalAlignment="Left" Height="23" Margin="337,221,0,0" TextWrapping="Wrap" Text="{Binding fax}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy48" Content="email 1" HorizontalAlignment="Left" Margin="59,249,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_email1" HorizontalAlignment="Left" Height="23" Margin="112,252,0,0" TextWrapping="Wrap" Text="{Binding email1}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_hCopy49" Content="email 2" HorizontalAlignment="Left" Margin="59,280,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_email2" HorizontalAlignment="Left" Height="23" Margin="114,283,0,0" TextWrapping="Wrap" Text="{Binding email2}" VerticalAlignment="Top" Width="343" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy49" Content="site web" HorizontalAlignment="Left" Margin="53,308,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_siteweb" HorizontalAlignment="Left" Height="23" Margin="112,311,0,0" TextWrapping="Wrap" Text="{Binding siteweb}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy50" Content="personne de réf." HorizontalAlignment="Left" Margin="11,336,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_refnom" HorizontalAlignment="Left" Height="23" Margin="112,339,0,0" TextWrapping="Wrap" Text="{Binding refnom}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy51" Content="tél. réf" HorizontalAlignment="Left" Margin="64,364,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_reftel" HorizontalAlignment="Left" Height="23" Margin="112,367,0,0" TextWrapping="Wrap" Text="{Binding reftel}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy52" Content="fax réf" HorizontalAlignment="Left" Margin="287,364,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_reffax" HorizontalAlignment="Left" Height="23" Margin="337,367,0,0" TextWrapping="Wrap" Text="{Binding reffax}" VerticalAlignment="Top" Width="120" Style="{DynamicResource styledetexte}"/>
                                        <Label x:Name="label_Copy53" Content="email réf" HorizontalAlignment="Left" Margin="51,392,0,0" VerticalAlignment="Top"/>
                                        <TextBox x:Name="ed_inst_refmail" HorizontalAlignment="Left" Height="23" Margin="112,395,0,0" TextWrapping="Wrap" Text="{Binding refmail}" VerticalAlignment="Top" Width="345" Style="{DynamicResource styledetexte}"/>


                                    </Grid>
                                </Border>
                                <DataGrid x:Name="g_param_institutions" IsReadOnly="True" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="430" Margin="10,10,0,0" VerticalAlignment="Top" Width="504" Style="{DynamicResource styledegrille}" SelectionChanged="g_param_institutions_SelectionChanged">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn x:Name="c_inst_noref" Header="nO réf/police" Binding="{Binding norefpolice}"/>
                                        <DataGridTextColumn x:Name="c_inst_societe" Header="société" Binding="{Binding societe}"/>
                                        <DataGridTextColumn x:Name="c_inst_co" Header="c/o" Binding="{Binding co}"/>
                                        <DataGridTextColumn x:Name="c_inst_npa" Header="npa" Binding="{Binding npa}"/>
                                        <DataGridTextColumn x:Name="c_inst_ville" Header="ville" Binding="{Binding ville}"/>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="bt_inst_ajout" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="633,439,0,0" Click="bt_inst_ajout_Click"/>
                                <Button x:Name="bt_inst_valid" Content="-" HorizontalAlignment="Left" Margin="758,439,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bInsEdit}" Background="#FFBACCEC" Uid="valid" Height="30" Click="bt_inst_valid_Click" />
                                <Button x:Name="bt_inst_annul" Content="-" HorizontalAlignment="Left" Margin="793,439,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" IsEnabled="{DynamicResource bInsEdit}" Background="#FFBACCEC" Uid="annul" Height="30" Click="bt_inst_annul_Click" />
                                <Button x:Name="bt_inst_modif" Content="-" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="modif" Height="30" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=g_param_institutions}" Click="bt_inst_modif_Click" Margin="668,439,0,0" />
                                <Button x:Name="bt_inst_suppr" Content="-" HorizontalAlignment="Left" Margin="703,439,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" IsEnabled="{Binding SelectedItem, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=g_param_institutions}" Click="bt_inst_suppr_Click"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header=" Classes d'âge | Genres et Taux LPP" Style="{DynamicResource TabItemStyle1}">
                            <Grid Background="#FFE5E5E5" Margin="0,0,0,1">
                                <Label x:Name="label1_Copy1" Content="pour l'année" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="76" Margin="17,13,0,0"/>
                                <DataGrid x:Name="gv_paramlpp_agetaux" IsReadOnly="True" AutoGenerateColumns="False" Height="304" Margin="13,56,561,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" SelectionChanged="gv_paramlpp_agetaux_SelectionChanged" >

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.Columns>
                                        <DataGridTextColumn Width="80" Header="âges" Binding="{Binding agetxt}"/>
                                        <DataGridTextColumn Width="120" Header="années de naissance" Binding="{Binding anneetxt}"/>
                                        <DataGridTextColumn Width="80" Header="sexes" Binding="{Binding sexe}"/>
                                        <DataGridTextColumn Width="80" Header="part employeur" Binding="{Binding partemployeur}" CellStyle="{StaticResource colonnedroite}" />
                                        <DataGridTextColumn Width="80" Header="part employé" Binding="{Binding partemploye}" CellStyle="{StaticResource colonnedroite}" />

                                    </DataGrid.Columns>

                                </DataGrid>
                                <TextBox x:Name="ed_lpp_annee" Text="{Binding annee, Mode=OneWay}" HorizontalAlignment="Left" Height="23" Margin="102,17,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="69" Style="{DynamicResource styledetexte}" TextChanged="ed_lpp_annee_TextChanged"/>
                                <Button x:Name="bt_lpp_ajoutage" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="396,423,0,0" Click="bt_lpp_ajoutage_Click"/>
                                <Button x:Name="bt_lpp_supprage" Content="-" HorizontalAlignment="Left" Margin="431,423,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=p_paramlpp_classeage}" Click="bt_lpp_supprage_Click"/>
                                <Grid x:Name="p_paramlpp_classeage" Margin="102,360,569,68" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=p_paramlpp_classeage}">
                                    <TextBox x:Name="ed_lpp_anneede" MaxLength="4" Text="{Binding deannee,Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="9,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="54" Style="{DynamicResource styledetexte}" TextChanged="ed_tx_annee_TextChanged" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_anneea" Text="{Binding aannee, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="68,28,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="54" Style="{DynamicResource styledetexte}" TextChanged="ed_tx_annee_TextChanged" AutomationProperties.IsRequiredForForm="True"/>
                                    <ComboBox x:Name="cmb_lpp_sexe" ItemsSource="{StaticResource ssexeAbr}" SelectedItem="{Binding sexe, Mode=TwoWay, UpdateSourceTrigger=Explicit}" SelectedValuePath="ssexeAbr" HorizontalAlignment="Left" Margin="139,29,0,0" VerticalAlignment="Top" Width="72" Style="{DynamicResource RoundComboBox}" Height="22" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_tauxemployeur" Text="{Binding partemployeur, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="220,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_tauxemployeur_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_tauxemploye" Text="{Binding partemploye, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="290,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="71" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_tauxemploye_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <Label x:Name="label1_Copy3" Content="année   de" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="100" Margin="-37,2,0,0"/>
                                    <Label x:Name="label1_Copy4" Content="à" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="54" Margin="68,2,0,0"/>
                                    <Label x:Name="label1_Copy5" Content="sexe" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="54" Margin="136,3,0,0"/>
                                    <Label x:Name="label1_Copy6" Content="employeur" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="70" Margin="220,2,0,0"/>
                                    <Label x:Name="label1_Copy7" Content="employé" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="71" Margin="290,2,0,0"/>
                                </Grid>
                                <DataGrid x:Name="gv_paramlpp_genrelpp" IsReadOnly="True" AutoGenerateColumns="False" Height="304" Margin="521,56,14,0" VerticalAlignment="Top" Style="{DynamicResource styledegrille}" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserResizeRows="False" SelectionChanged="gv_paramlpp_genrelpp_SelectionChanged" >

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>

                                    <DataGrid.Columns>
                                        <DataGridTextColumn Width="130" Header="code" Binding="{Binding typeplan}"/>
                                        <DataGridTextColumn Width="60" Header="seuil d'entrée" Binding="{Binding seuilentree}" CellStyle="{StaticResource colonnedroite}"/>
                                        <DataGridTextColumn Width="70" Header="salaire annuel réf." Binding="{Binding salaireannuelref}"  CellStyle="{StaticResource colonnedroite}"/>
                                        <DataGridTextColumn Width="80" Header="déduction coordination" Binding="{Binding deductioncoord}" CellStyle="{StaticResource colonnedroite}" />
                                        <DataGridTextColumn Width="70" Header="assuré max" Binding="{Binding salaireassuremax}" CellStyle="{StaticResource colonnedroite}" />
                                        <DataGridTextColumn Width="70" Header="assuré min" Binding="{Binding salaireassuremin}" CellStyle="{StaticResource colonnedroite}" />

                                    </DataGrid.Columns>

                                </DataGrid>
                                <Grid x:Name="p_paramlpp_genrelpp" Margin="521,360,14,68" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=p_paramlpp_genrelpp}">
                                    <TextBox x:Name="ed_lpp_typeplan" MaxLength="4" Text="{Binding typeplan, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="9,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="119" Style="{DynamicResource styledetexte}" TextChanged="ed_tx_annee_TextChanged" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_seuilentree" Text="{Binding seuilentree, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="132,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_assuremin_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_salaireannuelref" Text="{Binding salaireannuelref, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="202,30,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_assuremin_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_deductioncoord" Text="{Binding deductioncoord, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="272,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_assuremin_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_assuremax" Text="{Binding salaireassuremax, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="342,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="65" Style="{DynamicResource styledetexte}" Uid="num" KeyUp="ed_lpp_assuremin_KeyUp" AutomationProperties.IsRequiredForForm="True"/>
                                    <TextBox x:Name="ed_lpp_assuremin" Text="{Binding salaireassuremin, Mode=TwoWay, UpdateSourceTrigger=Explicit}" HorizontalAlignment="Left" Height="23" Margin="412,29,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="71" Style="{DynamicResource styledetexte}" Uid="num" AutomationProperties.IsRequiredForForm="True" KeyUp="ed_lpp_assuremin_KeyUp"/>
                                    <Label x:Name="label1_Copy2" Content="code" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="54" Margin="9,2,0,0"/>
                                    <Label x:Name="label1_Copy10" Content="assuré max" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="70" Margin="339,2,0,0"/>
                                    <Label x:Name="label1_Copy11" Content="assuré min" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="71" Margin="409,2,0,0"/>
                                    <Label x:Name="label1_Copy8" Content="déd. coord." HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="70" Margin="268,2,0,0"/>
                                    <Label x:Name="label1_Copy9" Content="annuel" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="70" Margin="199,3,0,0"/>
                                    <Label x:Name="label1_Copy12" Content="seuil éntrée" HorizontalAlignment="Left" VerticalAlignment="Top" Height="26" Width="70" Margin="128,3,0,0"/>
                                </Grid>
                                <Button x:Name="bt_lpp_ajoutgenrelpp" Content="+" HorizontalAlignment="Left" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="ajout" Height="30" Margin="938,423,0,0" Click="bt_lpp_ajoutage_Click"/>
                                <Button x:Name="bt_lpp_supprgenrelpp" Content="-" HorizontalAlignment="Left" Margin="973,423,0,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource styledebouton1}" Background="#FFBACCEC" Uid="suppr" Height="30" IsEnabled="{Binding DataContext, Converter={StaticResource CurrentItemToBooleanConverter}, ElementName=p_paramlpp_genrelpp}" Click="bt_lpp_supprage_Click"/>
                            </Grid>

                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
        </TabControl>
        <Border BorderBrush="#FFF5EBDA" BorderThickness="1" HorizontalAlignment="Left" Height="43" Margin="173,6,0,0" VerticalAlignment="Top" Width="1067" CornerRadius="5" Background="#FFE5CAA1">
            <StackPanel x:Name="p_boutonmenu" Orientation="Horizontal" Margin="0,0,-1,0" IsEnabled="{Binding SelectedIndex, Converter={StaticResource CurrentTabToBooleanConverter}, ElementName=tb_tableau}" Visibility="Hidden">
                <Button x:Name="bt_ajout" Content="Ajout" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Click="bt_ajout_Click" Height="31" Uid="ajout"/>
                <Button x:Name="bt_modifier" Content="Modifier" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Click="bt_modifier_Click" Height="31" Uid="modif"/>
                <Button x:Name="bt_valider" Content="Valider" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Click="bt_valider_Click" Uid="valid" Height="31"/>
                <Button x:Name="bt_annuler" Content="Annuler" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Center" Width="88" Style="{DynamicResource styleboutonmenu}" Click="bt_annuler_Click" Uid="annul" Height="31"/>
                <Grid x:Name="textBlock" HorizontalAlignment="Left" Height="17" Margin="5,10,0,0" VerticalAlignment="Top" Width="390">
                    <StackPanel Orientation="Horizontal" Margin="1,0,-1,0">
                        <Label Content="nO : " BorderBrush="{x:Null}" Padding="0"/>
                        <Label Content="{Binding idsalaries}" BorderBrush="{x:Null}" Padding="0"/>
                        <Label Content=" - " BorderBrush="{x:Null}" Padding="0"/>
                        <Label Content="{Binding nom}" BorderBrush="{x:Null}" Padding="0"/>
                        <Label Content=" " BorderBrush="{x:Null}" Padding="0"/>
                        <Label Content="{Binding prenom}" BorderBrush="{x:Null}" Padding="0"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>





    </Grid>
</Window>
